package com.harikiran.pgmgmt.model;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import lombok.Data;

/**
 * MongoDB document that stores metadata for administrative users who can access
 * the management console.
 *
 * <p>
 * Each admin record mirrors the identity supplied by Google OAuth and stores
 * just enough information to render the dashboard UI. Authorisation decisions
 * are handled by {@code AdminRepository} and the security layer.
 * </p>
 */
@Data
@Document(collection = "admins")
public class Admin {

	/**
	 * Unique identifier generated by MongoDB.
	 */
	@Id
	private String id;

	/**
	 * Full name returned by Google during authentication.
	 */
	private String name;

	/**
	 * Email address used for login and as the primary lookup key.
	 */
	private String email;

	/**
	 * Optional profile image URL supplied by the identity provider.
	 */
	private String pictureUrl;

	/**
	 * Convenience constructor used when creating admin records from Google
	 * authentication responses.
	 *
	 * @param name       display name of the administrator
	 * @param email      unique email identifier
	 * @param pictureUrl optional avatar URL
	 */
	public Admin(String name, String email, String pictureUrl) {
		this.name = name;
		this.email = email;
		this.pictureUrl = pictureUrl;
	}

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getPictureUrl() {
		return pictureUrl;
	}

	public void setPictureUrl(String pictureUrl) {
		this.pictureUrl = pictureUrl;
	}

}
