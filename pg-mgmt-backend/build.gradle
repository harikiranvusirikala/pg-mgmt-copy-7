plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.harikiran.pg-mgmt'
version = '1.0'
description = 'PG Management Backend'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// implementation(project(':pg-mgmt-frontend'))

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	implementation 'com.google.api-client:google-api-client:2.2.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

tasks.named('test') {
	useJUnitPlatform()
}

// task moveFrontendBuild(type: Copy) {
//     def staticDir = "$projectDir/src/main/resources/static"
//     def browserDir = "$staticDir/browser"
//     from(browserDir)
//     into(staticDir)
//     doFirst {
//         if (!file(browserDir).exists()) {
//             throw new GradleException("Browser build output not found: $browserDir")
//         }
//     }
//     doLast {
//         delete file(browserDir)
//     }
// }

// build.dependsOn moveFrontendBuild
// processResources.dependsOn moveFrontendBuild
